// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model: Stores user authentication details
model User {
  id           String         @id @default(uuid())
  username     String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  // Relationships
  createdRooms DecisionRoom[]
  votes        Vote[]
}

// DecisionRoom model: Represents a collaborative decision room
model DecisionRoom {
  id          String    @id @default(uuid())
  title       String
  explanation String
  deadline    DateTime  // When voting closes
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // Relationships
  creatorId   String
  creator     User      @relation(fields: [creatorId], references: [id])
  options     Option[]
  votes       Vote[]    // All votes for this room
}

// Option model: Represents a voting option within a DecisionRoom
model Option {
  id             String       @id @default(uuid())
  text           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  // Relationships
  decisionRoomId String
  decisionRoom   DecisionRoom @relation(fields: [decisionRoomId], references: [id], onDelete: Cascade)
  votes          Vote[]       // Votes cast for this specific option
}

// Vote model: Records a single vote by a user/guest in a DecisionRoom
model Vote {
  id             String       @id @default(uuid())
  voterId        String       // Can be userId for registered users, or a unique guest ID (e.g., from cookie)
  createdAt      DateTime     @default(now())
  // Relationships
  decisionRoomId String
  decisionRoom   DecisionRoom @relation(fields: [decisionRoomId], references: [id], onDelete: Cascade)
  optionId       String
  option         Option       @relation(fields: [optionId], references: [id], onDelete: Cascade)

  // Ensure a voter can only vote once per decision room
  @@unique([decisionRoomId, voterId])
}
